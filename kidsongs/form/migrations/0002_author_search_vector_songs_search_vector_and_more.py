# Generated by Django 5.0.2 on 2024-03-19 10:07

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.conf import settings
from django.db import migrations
from django.contrib.postgres.search import SearchVector
from django.contrib.postgres.operations import TrigramExtension


# Индексирование бд
def compute_search_vector(apps, schema_editor):
    Author = apps.get_model("form", "Author")
    Songs = apps.get_model("form", "Songs")
    Author.objects.update(search_vector=SearchVector("name"))
    Songs.objects.update(search_vector=SearchVector("name", "author", "temp", "ton", "hashtags"))


class Migration(migrations.Migration):
    dependencies = [
        ("form", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="author",
            name="search_vector",
            field=django.contrib.postgres.search.SearchVectorField(
                blank=True, null=True
            ),
        ),
        migrations.AddField(
            model_name="songs",
            name="search_vector",
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddIndex(
            model_name="author",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_vector"], name="form_author_search__442d53_gin"
            ),
        ),
        migrations.AddIndex(
            model_name="songs",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_vector"], name="form_songs_search__cb86c5_gin"
            ),
        ),
        migrations.RunPython(
            compute_search_vector, reverse_code=migrations.RunPython.noop
        ),
        TrigramExtension(),
    ]
